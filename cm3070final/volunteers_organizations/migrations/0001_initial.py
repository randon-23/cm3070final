# Generated by Django 5.1.4 on 2025-01-08 07:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts_notifs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('organization_name', models.CharField(max_length=100)),
                ('organization_description', models.CharField(max_length=500)),
                ('organization_address', models.CharField(max_length=100)),
                ('followers', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('dob', models.DateField()),
                ('volontera_points', models.IntegerField(default=0)),
                ('followers', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerMatchingPreferences',
            fields=[
                ('volunteer_preference_id', models.AutoField(primary_key=True, serialize=False)),
                ('availability', models.JSONField(default=list)),
                ('preferred_work_types', models.CharField(choices=[('online', 'Online'), ('in-person', 'In-Person'), ('both', 'Both')], default='both', max_length=20)),
                ('preferred_duration', models.JSONField(default=list)),
                ('fields_of_interest', models.JSONField(default=list)),
                ('skills', models.JSONField(default=list)),
                ('volunteer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='volunteers_organizations.volunteer')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('membership_id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('opportunity leader', 'Opportunity Leader'), ('member', 'Member')], default='member', max_length=20)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteers_organizations.organization')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteers_organizations.volunteer')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('volunteer', 'organization'), name='unique_volunteer_per_organization'), models.UniqueConstraint(condition=models.Q(('role', 'admin')), fields=('organization', 'role'), name='unique_admin_per_organization')],
            },
        ),
        migrations.CreateModel(
            name='Following',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_following', to=settings.AUTH_USER_MODEL)),
                ('followed_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organization_followee', to='volunteers_organizations.organization')),
                ('followed_volunteer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_followee', to='volunteers_organizations.volunteer')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('follower', 'followed_volunteer'), name='unique_follower_volunteer'), models.UniqueConstraint(fields=('follower', 'followed_organization'), name='unique_follower_organization'), models.CheckConstraint(condition=models.Q(models.Q(('followed_organization__isnull', True), ('followed_volunteer__isnull', False)), models.Q(('followed_organization__isnull', False), ('followed_volunteer__isnull', True)), _connector='OR'), name='followed_volunteer_or_organization'), models.CheckConstraint(condition=models.Q(('follower', models.F('followed_volunteer')), _negated=True), name='prevent_self_following')],
            },
        ),
    ]
