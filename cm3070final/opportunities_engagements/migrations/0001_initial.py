# Generated by Django 5.1.4 on 2025-03-06 10:10

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('volunteers_organizations', '0006_organizationpreferences_location'),
    ]

    operations = [
        migrations.CreateModel(
            name='VolunteerOpportunity',
            fields=[
                ('volunteer_opportunity_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=500)),
                ('work_basis', models.CharField(choices=[('online', 'Online'), ('in-person', 'In-Person'), ('both', 'Both')], max_length=10)),
                ('duration', models.CharField(choices=[('short-term', 'Short-Term'), ('medium-term', 'Medium-Term'), ('long-term', 'Long-Term')], default='short-term', max_length=20)),
                ('opportunity_date', models.DateField(blank=True, null=True)),
                ('opportunity_time_from', models.TimeField(blank=True, null=True)),
                ('opportunity_time_to', models.TimeField(blank=True, null=True)),
                ('days_of_week', models.JSONField(blank=True, default=list, null=True)),
                ('area_of_work', models.CharField(choices=[('education', 'Education'), ('health', 'Health'), ('environment', 'Environment'), ('animals', 'Animals'), ('arts', 'Arts'), ('community', 'Community'), ('sports', 'Sports'), ('technology', 'Technology'), ('other', 'Other')], max_length=100)),
                ('requirements', models.JSONField(default=list)),
                ('ongoing', models.BooleanField(default=False)),
                ('application_deadline', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('can_apply_as_group', models.BooleanField(default=False)),
                ('required_location', models.JSONField(default=dict)),
                ('languages', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=20)),
                ('slots', models.IntegerField(blank=True, default=None, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteers_organizations.organization')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='VolunteerOpportunityApplication',
            fields=[
                ('volunteer_opportunity_application_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('application_status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('as_group', models.BooleanField(default=False)),
                ('no_of_additional_volunteers', models.IntegerField(default=0)),
                ('rationale', models.TextField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteers_organizations.volunteer')),
                ('volunteer_opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opportunities_engagements.volunteeropportunity')),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerEngagement',
            fields=[
                ('volunteer_engagement_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('engagement_status', models.CharField(choices=[('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='ongoing', max_length=20)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteers_organizations.organization')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='volunteers_organizations.volunteer')),
                ('volunteer_opportunity_application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='opportunities_engagements.volunteeropportunityapplication')),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerOpportunitySession',
            fields=[
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('session_date', models.DateField()),
                ('session_start_time', models.TimeField()),
                ('session_end_time', models.TimeField()),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=20)),
                ('slots', models.PositiveIntegerField(blank=True, null=True)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opportunities_engagements.volunteeropportunity')),
            ],
            options={
                'ordering': ['session_date', 'session_start_time'],
            },
        ),
        migrations.CreateModel(
            name='VolunteerSessionEngagement',
            fields=[
                ('session_engagement_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('cant_go', "Can't Go"), ('can_go', 'Can Go')], default='cant_go', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opportunities_engagements.volunteeropportunitysession')),
                ('volunteer_engagement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opportunities_engagements.volunteerengagement')),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerEngagementLog',
            fields=[
                ('volunteer_engagement_log_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('no_of_hours', models.FloatField(default=0.5)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('log_notes', models.TextField(default='', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('volunteer_engagement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opportunities_engagements.volunteerengagement')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opportunities_engagements.volunteersessionengagement')),
            ],
        ),
        migrations.AddConstraint(
            model_name='volunteeropportunity',
            constraint=models.CheckConstraint(condition=models.Q(('ongoing', False), ('application_deadline__isnull', True), _connector='OR'), name='check_application_deadline_null_if_ongoing'),
        ),
        migrations.AddConstraint(
            model_name='volunteeropportunityapplication',
            constraint=models.UniqueConstraint(fields=('volunteer_opportunity', 'volunteer'), name='unique_volunteer_opportunity_application'),
        ),
        migrations.AddConstraint(
            model_name='volunteerengagement',
            constraint=models.UniqueConstraint(fields=('volunteer_opportunity_application',), name='unique_engagement_per_application'),
        ),
        migrations.AddConstraint(
            model_name='volunteersessionengagement',
            constraint=models.UniqueConstraint(fields=('volunteer_engagement', 'session'), name='unique_volunteer_session_engagement'),
        ),
        migrations.AddConstraint(
            model_name='volunteerengagementlog',
            constraint=models.UniqueConstraint(fields=('volunteer_engagement', 'session'), name='unique_volunteer_log_per_session'),
        ),
    ]
